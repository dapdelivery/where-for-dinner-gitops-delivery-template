apiVersion: kapp.k14s.io/v1alpha1
kind: Config
waitRules:
- conditionMatchers:
  - type: ServiceAvailable
    status: "False"
    failure: true
  - type: ServiceAvailable
    status: "True"
    success: true
  resourceMatchers:
  - apiVersionKindMatcher:
      apiVersion: servicebinding.io/v1alpha3
      kind: ServiceBinding
---
apiVersion: servicebinding.io/v1alpha3
kind: ServiceBinding
metadata:
  name: where-for-dinner-availability-rmq
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/part-of":"where-for-dinner-availability","apps.tanzu.vmware.com/auto-configure-actuators":"true","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/workload-type":"server","networking.knative.dev/visibility":"cluster-local"},"name":"where-for-dinner-availability","namespace":"recycle"},"spec":{"build":{"env":[{"name":"BP_JVM_VERSION","value":"17"}]},"params":[{"name":"gitops_server_address","value":"https://github.com/"},{"name":"gitops_repository_owner","value":"vipinms2"},{"name":"gitops_repository_name","value":"gitops"},{"name":"gitops_ssh_secret","value":"git-ssh"},{"name":"gitops_server_kind","value":"github"},{"name":"ports","value":[{"containerPort":8080,"name":"http","port":80}]}],"resources":{"limits":{"cpu":"1500m","memory":"750M"},"requests":{"cpu":"100m","memory":"500M"}},"serviceClaims":[{"name":"rmq","ref":{"apiVersion":"services.apps.tanzu.vmware.com/v1alpha1","kind":"ResourceClaim","name":"rmq-where-for-dinner"}}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/vipinms2/where-for-dinner-mc-longevityeks37.git"},"subPath":"where-for-dinner-availability"}}}
    kapp.k14s.io/change-group: servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: where-for-dinner-availability
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server
    networking.knative.dev/visibility: cluster-local
    app.kubernetes.io/component: run
    carto.run/workload-name: where-for-dinner-availability
spec:
  name: rmq
  service:
    apiVersion: services.apps.tanzu.vmware.com/v1alpha1
    kind: ResourceClaim
    name: rmq-where-for-dinner
  workload:
    apiVersion: apps/v1
    kind: Deployment
    name: where-for-dinner-availability

