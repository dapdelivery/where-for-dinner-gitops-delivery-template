apiVersion: apps/v1
kind: Deployment
metadata:
  name: where-for-dinner-ui
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: where-for-dinner-ui
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server
    networking.knative.dev/visibility: cluster-local
    app.kubernetes.io/component: run
    carto.run/workload-name: where-for-dinner-ui
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: run
      app.kubernetes.io/part-of: where-for-dinner-ui
      apps.tanzu.vmware.com/has-tests: "true"
      apps.tanzu.vmware.com/workload-type: server
      carto.run/workload-name: where-for-dinner-ui
      networking.knative.dev/visibility: cluster-local
  template:
    metadata:
      annotations:
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/part-of":"where-for-dinner-ui","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/workload-type":"server","networking.knative.dev/visibility":"cluster-local"},"name":"where-for-dinner-ui","namespace":"recycle"},"spec":{"build":{"env":[{"name":"BP_NODE_RUN_SCRIPTS","value":"build"},{"name":"BP_WEB_SERVER_ROOT","value":"dist"}]},"params":[{"name":"gitops_server_address","value":"https://github.com/"},{"name":"gitops_repository_owner","value":"vipinms2"},{"name":"gitops_repository_name","value":"gitops"},{"name":"gitops_ssh_secret","value":"git-ssh"},{"name":"gitops_server_kind","value":"github"},{"name":"ports","value":[{"containerPort":8080,"name":"http","port":80}]}],"resources":{"limits":{"cpu":"1000m","memory":"750M"},"requests":{"cpu":"100m","memory":"500M"}},"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/vipinms2/where-for-dinner-mc-longevityeks33.git"},"subPath":"where-for-dinner-ui"}}}
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: where-for-dinner-ui
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: server
        carto.run/workload-name: where-for-dinner-ui
        networking.knative.dev/visibility: cluster-local
    spec:
      containers:
      - image: taplongevity.azurecr.io/tapalong/where-for-dinner-ui-recycle@sha256:d4f726f07df389556e84274cb1a8a5ba92fc0fced64f28beee4676b4d4805e0e
        name: workload
        resources:
          limits:
            cpu: "1"
            memory: 750M
          requests:
            cpu: 100m
            memory: 500M
        securityContext:
          runAsUser: 1000
      serviceAccountName: default
---
apiVersion: v1
kind: Service
metadata:
  name: where-for-dinner-ui
  labels:
    app.kubernetes.io/part-of: where-for-dinner-ui
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server
    networking.knative.dev/visibility: cluster-local
    app.kubernetes.io/component: run
    carto.run/workload-name: where-for-dinner-ui
spec:
  selector:
    app.kubernetes.io/component: run
    app.kubernetes.io/part-of: where-for-dinner-ui
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server
    carto.run/workload-name: where-for-dinner-ui
    networking.knative.dev/visibility: cluster-local
  ports:
  - targetPort: 8080
    port: 80
    name: http

